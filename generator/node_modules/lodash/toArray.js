function toArray(r){if(!r)return[];if(isArrayLike(r))return isString(r)?stringToArray(r):copyArray(r);if(iteratorSymbol&&r[iteratorSymbol])return iteratorToArray(r[iteratorSymbol]());var e=getTag(r),a=e==mapTag?mapToArray:e==setTag?setToArray:values;return a(r)}var _Symbol=require("./internal/_Symbol"),copyArray=require("./internal/copyArray"),getTag=require("./internal/getTag"),isArrayLike=require("./isArrayLike"),isString=require("./isString"),iteratorToArray=require("./internal/iteratorToArray"),mapToArray=require("./internal/mapToArray"),setToArray=require("./internal/setToArray"),stringToArray=require("./internal/stringToArray"),values=require("./values"),mapTag="[object Map]",setTag="[object Set]",iteratorSymbol="symbol"==typeof(iteratorSymbol=_Symbol&&_Symbol.iterator)?iteratorSymbol:void 0;module.exports=toArray;