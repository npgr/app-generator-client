function baseClone(a,e,r,o,t,g){var n;if(r&&(n=t?r(a,o,t,g):r(a)),void 0!==n)return n;if(!isObject(a))return a;var l=isArray(a);if(l){if(n=initCloneArray(a),!e)return copyArray(a,n)}else{var b=getTag(a),T=b==funcTag||b==genTag;if(b!=objectTag&&b!=argsTag&&(!T||t))return cloneableTags[b]?initCloneByTag(a,b,e):t?a:{};if(isHostObject(a))return t?a:{};if(n=initCloneObject(T?{}:a),!e)return copySymbols(a,baseAssign(n,a))}g||(g=new Stack);var c=g.get(a);return c?c:(g.set(a,n),(l?arrayEach:baseForOwn)(a,function(o,t){assignValue(n,t,baseClone(o,e,r,t,a,g))}),l?n:copySymbols(a,n))}var Stack=require("./Stack"),arrayEach=require("./arrayEach"),assignValue=require("./assignValue"),baseAssign=require("./baseAssign"),baseForOwn=require("./baseForOwn"),copyArray=require("./copyArray"),copySymbols=require("./copySymbols"),getTag=require("./getTag"),initCloneArray=require("./initCloneArray"),initCloneByTag=require("./initCloneByTag"),initCloneObject=require("./initCloneObject"),isArray=require("../isArray"),isHostObject=require("./isHostObject"),isObject=require("../isObject"),argsTag="[object Arguments]",arrayTag="[object Array]",boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",funcTag="[object Function]",genTag="[object GeneratorFunction]",mapTag="[object Map]",numberTag="[object Number]",objectTag="[object Object]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",symbolTag="[object Symbol]",weakMapTag="[object WeakMap]",arrayBufferTag="[object ArrayBuffer]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]",cloneableTags={};cloneableTags[argsTag]=cloneableTags[arrayTag]=cloneableTags[arrayBufferTag]=cloneableTags[boolTag]=cloneableTags[dateTag]=cloneableTags[float32Tag]=cloneableTags[float64Tag]=cloneableTags[int8Tag]=cloneableTags[int16Tag]=cloneableTags[int32Tag]=cloneableTags[mapTag]=cloneableTags[numberTag]=cloneableTags[objectTag]=cloneableTags[regexpTag]=cloneableTags[setTag]=cloneableTags[stringTag]=cloneableTags[symbolTag]=cloneableTags[uint8Tag]=cloneableTags[uint8ClampedTag]=cloneableTags[uint16Tag]=cloneableTags[uint32Tag]=!0,cloneableTags[errorTag]=cloneableTags[funcTag]=cloneableTags[weakMapTag]=!1,module.exports=baseClone;