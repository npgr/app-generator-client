function baseIsEqualDeep(e,r,a,t,s,o){var g=isArray(e),c=isArray(r),u=arrayTag,y=arrayTag;g||(u=getTag(e),u==argsTag?u=objectTag:u!=objectTag&&(g=isTypedArray(e))),c||(y=getTag(r),y==argsTag?y=objectTag:y!=objectTag&&(c=isTypedArray(r)));var T=u==objectTag&&!isHostObject(e),b=y==objectTag&&!isHostObject(r),i=u==y;if(i&&!g&&!T)return equalByTag(e,r,u,a,t,s);var j=s&PARTIAL_COMPARE_FLAG;if(!j){var A=T&&hasOwnProperty.call(e,"__wrapped__"),l=b&&hasOwnProperty.call(r,"__wrapped__");if(A||l)return a(A?e.value():e,l?r.value():r,t,s,o)}return i?(o||(o=new Stack),(g?equalArrays:equalObjects)(e,r,a,t,s,o)):!1}var Stack=require("./Stack"),equalArrays=require("./equalArrays"),equalByTag=require("./equalByTag"),equalObjects=require("./equalObjects"),getTag=require("./getTag"),isArray=require("../isArray"),isHostObject=require("./isHostObject"),isTypedArray=require("../isTypedArray"),PARTIAL_COMPARE_FLAG=2,argsTag="[object Arguments]",arrayTag="[object Array]",objectTag="[object Object]",objectProto=global.Object.prototype,hasOwnProperty=objectProto.hasOwnProperty;module.exports=baseIsEqualDeep;